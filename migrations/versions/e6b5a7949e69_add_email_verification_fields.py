"""add email verification fields

Revision ID: e6b5a7949e69
Revises: 40245329be70
Create Date: 2025-04-03 19:49:18.881462

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e6b5a7949e69'
down_revision = '40245329be70'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('categories')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               nullable=False)
        batch_op.alter_column('zoho_client_id',
               existing_type=sa.VARCHAR(length=512),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('zoho_client_secret',
               existing_type=sa.VARCHAR(length=512),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('zoho_access_token',
               existing_type=sa.VARCHAR(length=512),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('zoho_refresh_token',
               existing_type=sa.VARCHAR(length=512),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_constraint('uq_users_password_reset_token', type_='unique')
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_column('password_reset_expires')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_reset_expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('uq_users_password_reset_token', ['password_reset_token'])
        batch_op.alter_column('zoho_refresh_token',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=512),
               existing_nullable=True)
        batch_op.alter_column('zoho_access_token',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=512),
               existing_nullable=True)
        batch_op.alter_column('zoho_client_secret',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=512),
               existing_nullable=True)
        batch_op.alter_column('zoho_client_id',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=512),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)

    op.create_table('categories',
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_categories_user_id'),
    sa.PrimaryKeyConstraint('id', name='categories_pkey'),
    sa.UniqueConstraint('name', name='categories_name_key')
    )
    # ### end Alembic commands ###
